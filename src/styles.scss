/* You can add global styles to this file, and also import other style files */

//@import '~@fortawesome/fontawesome-free/less/fontawesome';
@import '~@angular/material/prebuilt-themes/indigo-pink.css';
@import "~@ng-select/ng-select/themes/material.theme.css";
@import '~ngx-org-chart/_theming';
//@import '~font-awesome/less/font-awesome';
html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
.icon-grid{
  display: flex;
  justify-content: space-around;
}


.CodeMirror-hints {
  position: absolute;
  z-index: 10;
  overflow: hidden;
  list-style: none;

  margin: 0;
  padding: 2px;

  -webkit-box-shadow: 2px 3px 5px rgba(0,0,0,.2);
  -moz-box-shadow: 2px 3px 5px rgba(0,0,0,.2);
  box-shadow: 2px 3px 5px rgba(0,0,0,.2);
  border-radius: 3px;
  border: 1px solid silver;

  background: white;
  font-size: 90%;
  font-family: monospace;

  max-height: 20em;
  overflow-y: auto;
}

.CodeMirror-hint {
  margin: 0;
  padding: 0 4px;
  border-radius: 2px;
  white-space: pre;
  color: black;
  cursor: pointer;
}

li.CodeMirror-hint-active {
  background: #08f;
  color: white;
}

.w-100{
  width: 100%;
}
.horizontal{
  cursor: var(--ninja-separator-vcursor,ew-resize) !important;
}


.dropdown, .dropup {
  position: relative;
}
.open>.dropdown-menu {
  display: block;
}
.show {
  display: block!important;
}
.dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: 1000;
  display: none;
  float: left;
  min-width: 160px;
  padding: 5px 0;
  margin: 2px 0 0;
  font-size: 14px;
  text-align: left;
  list-style: none;
  background-color: #fff;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  border: 1px solid #ccc;
  border: 1px solid rgba(0,0,0,.15);
  border-radius: 4px;
  -webkit-box-shadow: 0 6px 12px rgb(0 0 0 / 18%);
  box-shadow: 0 6px 12px rgb(0 0 0 / 18%);
}
.dropdown-menu>li>a {
  display: block;
  padding: 3px 20px;
  clear: both;
  font-weight: 400;
  line-height: 1.42857143;
  color: #333;
  white-space: nowrap;
}

.ngx-json-viewer .segment .segment-main.expandable.expanded .toggler:after {
  content: "+" !important;
  font-size: 15px;
}

.ngx-json-viewer .segment .segment-main.expandable .toggler:after {
  content: "-" !important;
  font-size: 27px;
}

.ngx-json-viewer {
  font-family: unset !important;
  font-size: 16px !important;
}

.ngx-json-viewer .segment .segment-main .segment-key{
  color: #423f3f !important;
}




.popover{
  position: absolute;

  &.popover-content {
    border: 1px solid black;
    padding: 1.2rem;
    z-index: 1060;
    max-width: none;
    border-radius: 0rem;
    box-shadow: 0 0.25rem 0.5rem rgb(0 0 0 / 20%);
  }
}

$popover-bg: #757575 !default;
$popover-inner-padding: 1.2rem !default;
$zindex-popover: 1060 !default;
$popover-arrow-width: 2.2rem !default;
$popover-arrow-height: 1.1rem !default;
$popover-arrow-outer-width: ($popover-arrow-width + 0.1rem) !default;
$popover-arrow-outer-color: fade-in($popover-bg, .05) !default;
$popover-arrow-color: $popover-bg !default;
$popover-header-bg: darken($popover-bg, 3%) !default;
$popover-border-width: 0rem !default;
$popover-border-color: black !default;
$popover-border-radius: 0rem !default;
$popover-box-shadow: 0 .25rem .5rem rgba(black, .2) !default;
$popover-body-color: white !default;
$popover-body-font-size: 1rem !default;
$popover-header-color: white !default;
$popover-header-font-size: 1.6rem !default;
$popover-target-offset: 0.5rem !default;
$font-family: 'Helvetica' !default;

@mixin fix-arrow-position-for-retina($direction) {
  .arrow {
    &:before, &:after {
      #{$direction}: 0px !important;   // Fix visual gap on retina displays
    }
  }
}

.popover {
  .virtual-area {
    height: 11px;
    width: 100%;
    position: absolute;
  }
  &.bs-popover-top .virtual-area {
    bottom: -11px;
  }
  &.bs-popover-bottom .virtual-area {
    top: -11px;
  }
  &.bs-popover-left .virtual-area {
    right: -11px;
  }
  &.bs-popover-right .virtual-area {
    left: -11px;
  }
}

.popover.popover-content {
  background-color: $popover-bg;
  border: $popover-border-width solid $popover-border-color;;
  padding: $popover-inner-padding;
  z-index: $zindex-popover;
  max-width: none;
  border-radius: $popover-border-radius;
  box-shadow: $popover-box-shadow;
  font-family: $font-family;

  .arrow {
    position: absolute;
    display: block;
    width: $popover-arrow-width;
    height: $popover-arrow-height;
    margin: 0 !important;

    &::before,
    &::after {
      position: absolute;
      display: block;
      content: "";
      border-color: transparent;
      border-style: solid;
    }
  }
  &.sm {
    width: 20rem;
  }

  &.md-sm {
    width: 26rem;
  }

  &.md {
    width: 34rem;
  }

  &.lg {
    width: 40rem;
  }

  .popover-header {
    color: $popover-header-color;
    font-size: $popover-header-font-size;
    font-weight: bold;
    line-height: 2.1rem;
  }

  .popover-body {
    color: $popover-body-color;
    font-size: $popover-body-font-size;
    line-height: 1.3rem;
  }

  &.bs-popover {
    // These margins all define distance from the target to render
    &-left {
      margin-left: calc(-#{$popover-arrow-height} - #{$popover-target-offset});
      @include fix-arrow-position-for-retina(right);
    }
    &-right {
      margin-left: calc(#{$popover-arrow-height} + #{$popover-target-offset});
      @include fix-arrow-position-for-retina(left);
    }
    &-top, &-top-right, &-top-left {
      margin-top: calc(-#{$popover-arrow-height} - #{$popover-target-offset});
      @include fix-arrow-position-for-retina(bottom);
    }
    &-bottom, &-bottom-right, &-bottom-left {
      margin-top: calc(#{$popover-arrow-height} + #{$popover-target-offset});
      @include fix-arrow-position-for-retina(top);
    }

    &-right, &-left {
      .arrow {
        top: 50%;
        transform: translateY(-50%);
      }
    }

    &-top, &-bottom {
      .arrow {
        left: 50%;
        transform: translateX(-50%);
      }
    }

    &-right {
      .arrow {
        left: calc((#{$popover-arrow-height} + #{$popover-border-width}) * -1);
        width: $popover-arrow-height;
        height: $popover-arrow-width;
        margin: 0 !important;
      }

      .arrow::before,
      .arrow::after {
        border-width: calc(#{$popover-arrow-width} / 2) $popover-arrow-height calc(#{$popover-arrow-width} / 2) 0;
      }

      .arrow::before {
        left: 0;
        border-right-color: $popover-arrow-outer-color;
      }

      .arrow::after {
        left: $popover-border-width !important;
        border-right-color: $popover-arrow-color;
      }
    }

    &-left {
      .arrow {
        right: calc((#{$popover-arrow-height} + #{$popover-border-width}) * -1);
        width: $popover-arrow-height;
        height: $popover-arrow-width;
        margin: 0 !important;
      }

      .arrow::before,
      .arrow::after {
        border-width: calc(#{$popover-arrow-width} / 2) 0 calc(#{$popover-arrow-width} / 2) $popover-arrow-height;
      }

      .arrow::before {
        right: 0;
        border-left-color: $popover-arrow-outer-color;
      }

      .arrow::after {
        right: $popover-border-width !important;
        border-left-color: $popover-arrow-color;
      }
    }

    &-top, &-top-right, &-top-left {
      .arrow {
        bottom: calc((#{$popover-arrow-height} + #{$popover-border-width}) * -1);
      }

      .arrow::before,
      .arrow::after {
        border-width: $popover-arrow-height calc(#{$popover-arrow-width} / 2) 0;
      }

      .arrow::before {
        bottom: 0;
        border-top-color: $popover-arrow-outer-color;
      }

      .arrow::after {
        bottom: $popover-border-width !important;
        border-top-color: $popover-arrow-color;
      }
    }

    &-bottom, &-bottom-right, &-bottom-left {
      .arrow {
        top: calc((#{$popover-arrow-height} + #{$popover-border-width}) * -1);
      }

      .arrow::before,
      .arrow::after {
        border-width: 0 calc(#{$popover-arrow-width} / 2) $popover-arrow-height calc(#{$popover-arrow-width} / 2);
      }

      .arrow::before {
        top: 0;
        border-bottom-color: $popover-arrow-outer-color;
      }

      .arrow::after {
        top: $popover-border-width !important;
        border-bottom-color: $popover-arrow-color;
      }

      // This will remove the popover-header's border just below the arrow
      .popover-header::before {
        position: absolute;
        top: 0;
        left: 50%;
        display: block;
        width: $popover-arrow-width;
        margin-left: calc(#{$popover-arrow-width} / -2);
        content: "";
        border-bottom: $popover-border-width solid $popover-header-bg;
      }
    }

    &-top-right, &-bottom-right {
      transform: translateX(-2rem);
      .arrow {
        left: 0.9rem;
      }
    }

    &-top-left, &-bottom-left {
      transform: translateX(2rem);
      .arrow {
        right: 0.9rem;
      }
    }
  }
}

.popover.popover-content {
  background-color: #ffffff !important;
}
.popover.popover-content.bs-popover-bottom .arrow::after, .popover.popover-content.bs-popover-bottom-right .arrow::after, .popover.popover-content.bs-popover-bottom-left .arrow::after{
  border-bottom-color: #ffffff !important;
}
.popover.popover-content.bs-popover-bottom .arrow, .popover.popover-content.bs-popover-bottom-right .arrow, .popover.popover-content.bs-popover-bottom-left .arrow {
  top: calc((1rem + 0rem) * -1);
}
.popover.popover-content .popover-body{
  color: inherit;
  font-size: inherit;
}
